# Prioritisation

I listened to a podcast by Kevin Powell where the main message was to avoid overthinking things in web development projects.
He discussed examples from his own career as an educational course and video creator where he felt he may have put an inordinate amount of effort into things that were not important.
He mentioned making beautiful blog sites for learning (rather than learning), designing impressive and innovative UIs (that were not user-friendly), and including webcam on his early videos (when the quality was subpar and audio sufficed).

He also made a beautiful point about the beauty of 'the human', reminding listeners that content consumers and application users often appreciate imperfections in some areas.
Not everything needs a glow, and after-effect, a filter.
Imperfections can make things more appealing in an age of 'perfection' the 'overpolished' and AI-produced synthetic images.
He said this, fittingly, as someone who goes against dominant YouTube viewership strategies by uploading blank-screen narration-only videos on YouTube from time-to-time.
These blank-screen videos of course only appear on his secondary YouTube channel presumably due to the viewership dip that such a format would enforce on his main channel's content.

Not every aspect of something is worth optimising.
It goes back to that old-quote... “Perfection is achieved not when there is nothing more to add, but when there is nothing left to take away”

As a perfectionist at times, this quote is one of my favourites.
Though I must admit, as a perfectionist, at times the quote feels meaningless.
For if there is something more to add, is that not also something to take away?
As a critical-minded person, can I not always find something to take away?

I digress to offer an iterated perspective on the main learning I take from this podcast.

Imperfection is not innately beautiful but can be endearing and a sign of a person's focus being positively applied elsewhere. I think of UIs that work on some devices and yet on others are non-functional.
Having everything working does not mean there's nothing that needs adding.

But what is most important to the quality of your product?
Which features or aspects are most vital? 
Which aspects constitute the roots of the tree and which are the bells and whistles?
Which aspects are feature creep? UI creep? Or just a manifestation of our egos to show ourselves that we can in fact do something?

If we achieve something worthwhile we achieve something that moves us forward.
But how often do we achieve things that don't move us forward?

